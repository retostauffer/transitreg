% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transitreg_tmf.R
\name{transitreg_tmf}
\alias{transitreg_tmf}
\title{Transition Model Data Preparer}
\usage{
transitreg_tmf(
  data,
  response,
  breaks,
  censored = c("uncensored", "left", "right", "both"),
  theta_vars = NULL,
  newresponse = NULL,
  scaler = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{A data frame containing the raw input data.}

\item{response}{Character string specifying the name of the response variable
to be used for transition modeling. This variable must represent
counts or categorical states.}

\item{breaks}{numeric vector with the bin intersection points (break points).}

\item{censored}{character, or one of \code{"uncensored"} (default), \code{"left"}, \code{"right"}, or \code{"both"}.
Specifies if the distribution is uncensored or censored on one or both ends.}

\item{theta_vars}{\code{NULL}  or character vector with the bin-specific theta variables
to be set up (e.g., \code{c("theta0", "theta99")}). Can be an empty character
vector (or \code{NULL}) if there are no \code{theta_vars}.}

\item{newresponse}{\code{NULL} or integer. New response vector to overwrite the one
in \code{data}.}

\item{scaler}{Can be \code{FALSE}/\code{NULL}, \code{TRUE}, or a list. See section 'Scaler' for details.}

\item{verbose}{Logical value indicating whether information about the transformation
process should be printed to the console. Default is \code{FALSE}.}

\item{\dots}{currently unused (TODO(R): Check lower/upper dev option controlled
via the dots argument; remove or document).}
}
\value{
A transformed data frame in the long format. Each row represents a binary transition
indicator (\code{Y}) for the response variable. Additional columns in the output include:
\itemize{
\item \code{index}: The original row index from the input data.
\item \code{Y}: The binary indicator for whether a transition to a higher
category occurred.
\item \code{theta}: The level corresponding to the current transition.
\item \verb{theta[0-9]+}: Special binary variables which are \code{1L} for all rows where
(the unscaled) \code{theta} matches the integer \verb{[0-9]+$}, else \code{0L}. Indicator
that we are in bin \verb{[0-9]+$}. Only set if \code{theta_vars} is specified accordingly.
}

The return will contain the response name as attribute \code{"response"} and (potentially)
a \code{"scaler"} attribute (see section 'Scaler').

This format is required for fitting transition models using GLM or GAM frameworks.
For instance, a response variable with a value of 3 will generate rows with
transitions up to its value (0, 1, 2, and 3).
}
\description{
Transforms a data frame into the format required for estimating transition models.
The function generates binary response data for fitting GLM-type models,
specifically designed to represent transitions between counts or states in
a probabilistic framework.
}
\details{
Transition models focus on modeling the conditional probabilities of transitions
between states or counts. This function converts the input data into a long format
suitable for such models. Each row in the resulting data frame corresponds to a
binary transition indicator, representing whether a transition to a higher category
occurred. For details on the modeling framework, see Berger and Tutz (2021).
}
\section{'Scaler'}{

When estimating new model (\code{\link[=transitreg]{transitreg()}}), the user can specify \code{scale.x = TRUE}
which will standardize all covariates as well as the \code{theta} variable
using \code{(z - mean(z)) / sd(z)} with \code{z} being a covariate or \code{theta}. If the
input \code{scaler} to this function is set \code{TRUE} the return of this function
will provide an attribute \code{"scaler"} which contains a list, storing mean and
standard deviation used for scaling such that it can be applied to new data
(e.g., during prediction). If \code{FALSE} or \code{NULL} no scaling is applied, and no
attribute is set.

If input \code{scaler} is a list, the scaling is applied given the content of that list.
No additional attribute will be set on the return value.
}

\examples{
## Raw data frame.
d <- data.frame(myresponse = c(5.3, 0, 2.1),
                x = c(-1.2, 3.2, -0.5),
                y = c(765, 731, 353),
                z = as.factor(c("foo", "bar", "foo")))

## Building model.frame for testing
mf <- model.frame(myresponse ~ x + y + z, d)

## Breaks
bk <- seq(0, 8, by = 1)

## Simple case
tmf <- transitreg:::transitreg_tmf(mf, "myresponse", bk)
head(tmf)

## Providing response via 'newresponse' argument (bin index)
idx  <- transitreg:::num2bin(mf$myresponse, bk, "uncensored")
tmf2 <- transitreg:::transitreg_tmf(subset(mf, select = -myresponse),
                                    "myresponse", bk, newresponse = idx)
head(tmf2)

## Demonstrating 'thetaX' behavior
theta_vars <- c("theta0", "theta1", "theta2")
tmf3 <- transitreg:::transitreg_tmf(mf, "myresponse", bk, theta_vars = theta_vars)
head(tmf3)

## Demonstrating 'scaler' behavior
tmf4 <- transitreg:::transitreg_tmf(mf, "myresponse", bk, scaler = TRUE)
head(tmf4)
(scaler <- attr(tmf4, "scaler"))

## Re-using the scaler from above
tmf5 <- transitreg:::transitreg_tmf(mf, "myresponse", bk, scaler = scaler)
identical(tmf4, tmf5)

}
\seealso{
\code{\link[=transitreg]{transitreg()}}.
}
\author{
Niki
}
\concept{modeling}
\concept{transition}
\keyword{data}
\keyword{transformation}
